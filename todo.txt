
- make deeper build refactoring
    - try to resolve in-copmpile blackbox hacks
        - fix bsetroot requires static in-compilation of bimage.cpp
            * move sources to src folder
            * move configs in root, styles, etc to data folder
            * check all compiles and generates successfully
            * add same defines to bbcore lib as in blackbox proj
            * create g test especially for bbcore lib
            * move blackbox entry to separate main.cpp file
                * make a file
                * make a class Blackbox
                * make call of Blackbox class to run
                * move winmain to main.cpp
            - move content of blackbox to bbcore lib
                * make a list of exported bbapi
                x create 'storage' file for bbapi replacement in bbcore (bbcoreapi)
                * make compilation of bblib fully separate from blackbox
                ? cannot directly move all to bbcore - impossible to used both libs by consumers together - doubled content
                    - move all files and put all content to namespaces (except: main.cpp, bbapi xx)
                        * resolve bblib includes dir and headers from blackbox dir (bbapi.h)
                            * move bblib from c to cpp
                                * fix bblib: pidl.c uses defaultrcPath() from blackbox proj
                                * remove include of blackbox headers to bblib
                        * fix the .\blackbox\Settings.h variables containment
                        * fix the exported api's from blackbox that contain ellipsis - blocks moving to namespace
                        * fix missing va_end paired to va_start (or leads to #UB)
                        * resolve code duplication in blackbox of exported api's and tools (and names collisions)
                        ? the BBSETTING_STYLEREADER_ONLY in settins.cpp prevents from normal moving to namespace
                            ? bbrcPath cannot find from settings.cpp when in-compile hack
                                ? it cannot be resolved in case of in-compile of settings.cpp because needed bbrcPath() is not compiled in that case
                            ? the __BBCORE__ macro in settings.cpp prevents clean move out api
                    ? make wrapper calls for every exported blackbox api
                    - make callable functions with moved original content from exported api in bbcore lib
            - make separate static only lib bbcore with namespace bbcore inside, no exports
                ? __BBCORE__ prevents from splitting
                    ? uses __BBCORE__ strange files:
                        ? bb.h contains extern globals under this macro . But separate functions for blackbox case compilation
                        ? bbapi.cpp (no one uses except blackbox)
                        ? fix bbapi.cpp (no one uses except blackbox)
                        ? settings.cpp (used by bbnote, bbstylemaker) ; changes func behaviour
                            ? resolve __BBCORE__ in settings.cpp
                            ? BBSETTING_NOWINDOW - settings.cpp
                            ? BBSETTING_STYLEREADER_ONLY
                                ? BBSETTING tricky extern define
                                    ? the variables defined directly in settings.h in one case
                            ? __BBSM__
                        - utils.cpp (used by bbiconbox, bbstylemaker)
                        - bbapi.h (defines exported special name functions for plugins)
                        - bbsenddata.h (if macro and x64 changes func behaviour)
                        - utils.cpp (adds print log fn)
            - move blackbox to use bbcore lib
            - move all blackbox functionality to bbcore lib
            - replace direct in-compile of cpp from ex blackbox in bsetroot to usage of static lib bbcore
            - try remove direct in-compile of image_cx.cpp
            ? needs functions bimage_init bimage_create bimage_destroy bimage_getpixels
                ? try move bimage functions to bblib
                    ? bimage uses global static variables
                        - try remove bimage global variables
            ? bbstylemaker requires in-compile Settings.cpp, BImage.cpp
                ? stylemaker defines it's macro BBSETTING_STYLEREADER_ONLY and causes compilation different code in Settings.cpp
                ? requires functions parse_font, ReadStyle, GetStyleItems, StyleStructPtr
            ? bbnote requres in-compile sources: Settings.cpp, BImage.cpp
                ? adds macroses BBSETTING_STYLEREADER_ONLY BBSETTING_NOWINDOW that changes compiled code
                ? missing in-compile functions: bimage_init, ReadStyle
                - BImage.cpp ; ?  
        - resolve: exports in original are exported from exe and plugins use it
            - cover bblib exported api with tests
            ? make possible compilation of bbcore as static and as dynamic lib
        - remove hack in bbnote - in-compile sources from other dir
        - remove hack compilations of:
            - cpp files from bbstylemaker
            - in bbLeanSkinEng remove direct in-compile hack of ../../blackbox/BImage.cpp !!!
            - remove direct cpp file include from:
                - bbleanBar
                - bbstylemaker
                - find where is more such includes
            - make bblib buildable as dynamic based on option
                - make compilation
                    - error: undefined symbol: bbWC2MB in pidl.c (located in blackbox)
                        - move bbWC2MB,bbWC2MB to strings.c and exported with usage and forwarding export in blackbox
                            * create helper wchar string convertin func in bblib
                            ? pidl uses bbWC2MB that depends on flag
                            ? the bbWC2MB depends on property Settings_UTF8Encoding in blackbox
                            - make tests for wchar_to_mbs
                    - undefined symbol: defaultrcPath in pidl.c (located in blackbox)
            - change multiple settings object instances to single
            - make blackbox exported api via proxying to some global object (singletone?)
                - make setter of global api object via interface
                - make set/unset global interface near (where?) blackbox object creation (in main?)
                - make all exported apis work only via this interface
        - make sure needed defs defined based on option
        - set correct artifacts gaterhing to instaler build
        - remove global variable in rc functionality 
        * remove #include "../../plugins/bbPlugin/drawico.cpp"  from MenuItem.cpp
    - remove blackbox/bbcore in-compile include from bblib (start with remove include dir)
    - remove usage of defaultrcPath and other fn fromiz blacbox inside bblib
    - remove global variables in bblib (rc global state)
    - remove global variables all over bblean repository code
    - try to remove include blackbox dir from bblib
    - add nls txt to docs copying
- split BBSendData.h to h and cpp files
- move all functions that ends with XXX_command to corresponding source fiels (commands.cpp, commands.h)

- make other refactorings
    - remove duplicate code from fuzzydoc - bblib
        - add library bblib dep
        - add runtime dep gathering if needed
    - remove variable definitions from .h files
    - replace explicit import loading based assumption that we're working on windows 10 and later
    - try to replace usage of bbMB2WC to explicit case by existing callers to utf-8 or wchar_t
    - replace callings of MessageBeep to something. Maybe window flashing
      once. It is a bad practice to cause any sounds
    * make sure every used va_start paired with closing va_end
    ? in class Menu remove friends function. Must not access to fields from outside
    - remove cringe memset hacks in: 
        - Menu::Menu(const char *pszTitle)
        - MenuItem::MenuItem(const char* pszTitle) 
        - plugin_info()
        - all callers of BBP_clear
            - bbanalog_plugin()
            - icon_box()
            - barinfo()
            - slit_info()
            - barinfo struct (class)
? remove __BBCORE__ macro usage in blackbox.exe
- add 'no skin' variant to use original grey skin
? change structure - source + include dirs for plugins
- move to wchar_t paths usage (inside)
? fix shared build of bblib
? bblean skin plugin don't work without loaded bblean bar !
? possibly calling 'about' corrupts string due to conversion from utf-8
- fix about text (encoding currupted) show in: bsetbg, bsetroot
- change fuzzygen:
    - search for template files in it's exe directory
    - add possibility to set output dir via cmdline arg
    - refactor docs generating subproj using new possibilities of fuzzydoc
    - move to utf-8 input files proceeding
- make bbnote doc more fuzzy syntax compatible - more like vanilla bbnote.htm
- make export functions commented in doxygen style
? rename bbLeanSkinEng32 to correct one ('english' ? 32 bits?)
- find how 'exactly' works read_value - 'reading' with returning pointer to
  string is *very* suspicious. Hashmap? When cleared ?
- move bbPath() function and corresponding path-related to rcfile area
- remove all 'include cpp' hacks everywhere

- move bblib c files to cpp with careful export conventions
- make external utf-8 only in char* args
- make windows 10, 11 full support - hook mode and native
? add spleen font type usage from openbsd
- possibly add install-provided 'cmake' export libraries for plugin
  developement
- figure out how generated fonts used and how can be used
- modify default styles to show user's windows wallpaper
    - test style with wallpaper engine
- replace explicit imports for functions that present at least from vista/xp

- other refactorings
    - bbkeys refactoring
        - change traverse of hotkeys to hashmap instead of list
    ? update CXIMAGE version ?
    - remove explicit definitions WIN64 and _WIN64
    - move copy artifacts function to one common upper level cmake file and use by subprojects
    - figure out: maybe usage of read_file causes horribly memory leaks
    - make incremental adding compiled plugins to config ini
    - in bbroot.h remove statics
    ? uwp gui-based windows case ?
    ? add changelog file ?
    - possibly nls2b potentially overflows buffer
    - rewrite nls usage to use c++ hash map internally
    - move nls from outside of bbcore namespace - possibly in bblib to separate independent class (free of global variables, states, functions, ...)
    ? the findRCFile usage with writing to output buffer is overflow vulnerable
    - change bad unchecked buffer size writing in bbPath, bbcore::findRCFile
    - move functions code from BBSendData.h to related cpp  file
    - remove global usage of SettingsXXX classes (SettingsCommon, etc)
    - remove warnings on msvsc compilation, mingw
    - in MenuItem class remove dirty hack in constructor with memset of *this - replace to {} initialisation of data
    - possibly the GenerateFonts command runs 'always' no matter whether there already any generated fonts
    - make work with data.m_pidl_list in class Menu non-raw pointed
    - move menumaker cpp content from menu.cpp to menumaker.cpp
    - wipe or purge win0x500.h
    - remove all externs - global variables
    - remove variables in classes from public visibility in bbleanbar files
    - remove friends everywhere.
    - remove bbnote Menu_Reconfigure - replace somehow with bbcore functionality - remove duplication (bbcore - bbnote)
    - fix the Core_IDString - it copies to output buffer without border check
    - replace all sprintf cases - printint to buffer without checking size is dangerous
    - think something about Menu class related g_incref, g_decref functions -
      may be public? Methods instead of global functions ?
    - remove all static variables from class Menu (at least g_MenuWindowList_, g_MenuStructList, g_MenuRefList)
    - rewrite implicit import mechanisms (probably replace to my lib loader usage)


- add manifest to make winapi dialogs look more pretty
- add 'start button', then workspaces. Maybe similar to awesome wm
- try to use bbzero plugins

- rewrite paths.cpp from win-specific apis to c++ filesystem

bugs to fix:
-----------
- fix probably missing saving marginWidth in style file (like toolbar.button.marginWidth: 1)
- fix windows 11 'ai' applications run crash
- correct work under windows 10
- correct work under windows 11
- correct work 'as shell' under windows 10
- correct work 'as shell' under windows 11
- oni.exe game does not run via menu under windows 10 x64
- fix volume tray icon work
- duplicated 'programs' in submenu (windows 10)
- japan hieroglyphs in fs names doesn't shown properly in start menu navigation

features request:
----------------
- work with Wallpaper Engine app
- xoblite_bb5_rc4 plugins compatibility
- custom control panel app - 'restoring' classic one
- make app for fast replacement of old windows photo viewer (rundll32 "%ProgramFiles%\Windows Photo Viewer\PhotoViewer.dll")
- make bbnote support utf-8 and display as utf-8 by default
- add 'browse' button with dialog calling in bbstylemaker for image file path setting
? fix tips work for some bbleanbar items ? (settip fn)
