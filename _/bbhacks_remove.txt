
* check_global_font() - add bool parameter bool;  check_global_font(const char *p, const char *fullkey, bool global)
    * read_style_item ; bbox, bsetroot, bbnote (-> Ex)
        * ReadStyle ; bbnote(LEAF), bbstylemaker(LEAF)
            * Settings_ReadStyleSettings  ; bbox(LEAF)
                * try to make class Settings, interface ISettings, lite and full versions of implementations
                    * remove BBSETTINGS_INTERNAL
                    * make bodies for ISettings derived classes
                        * make method check_global_font
                        * make method read_style_item ; the BBSETTING_STYLEREADER_ONLY is changed to usage of private settings class
                            * make init for settings class - two constructors
                        * make method ReadStyle
                        * make method Settings_ReadStyleSettings
                        * make ReadStyleItem method
                            * move body of ReadStyleItem to private cpp
        * ReadStyleItem ; (export)
            * rename ReadStyleItem in bbcolore3dc to local name
        * make sure callers use right versions - replace calls from functions to methods for callers ; currently - on ReadStyleItem
* move exported api's bodies (in settings.cpp) in blackbox to settingsp.cpp
    * remove __BBCORE__ macro from settingsp.cpp
        * make methods for Settings_ReadRCSettings
            * find usage tree of Settings_ReadRCSettings
            * make Settings_ReadSettings method
                * resolve dep makekey
                    * make makekey method
                        x need screenNumber dep
            * make the extrc_cfg, bbrc_cfg must be in settings.cpp file
            x need bbrcPath ; (bb runtime)
            x need extensionsrcPath ; (bb runtime)
        * replace usage of Settings_ReadRCSettings to method
        * make Settings_WriteSetting method
        * remove Settings_WriteSetting
            * make method for Settings_WriteRCSetting
            * replace Settings_WriteRCSetting
        * remove screenNumber - replace with gScreenNumber
            * remove makekey
                * remove Settings_ReadSettings
        * remove Settings_ReadSettings
    * make CreateStyleFont method
        * make method
        * move CreateStyleFont to private
        * replace usage of CreateStyleFont in tools with settings + method
        * change CreateStyleFont body to usage of settings instance + method
* wipe PARSEFONT_AFTER macro
* resolve move breakers:
    * parse_font 
    * getweight
    * ParseJustify
    * StyleItems
        * replace all direct usage of StyleItems to GetStyleItems()
        * rename global object from StyleItems to normal name
    x other_items
    x DefStyle_1
    x gScreenNumber
* remove __BBCORE__ macro from cpp files in blackbox 
* remove other macroses from settings.cpp and settingsp.cpp
    * make somehow the gStyleItems controlled by 'nomenu', 'nowindow' flags
        * make macroses for a group of style items
        * create related methods for GetStyleItems
        * replace usage of GetStyleItems with created methods
x leave only Settings class methods definitions in settings.cpp file
x remove bad macroses from BImage.cpp
* resolve preventing deps from bimage.cpp in tools
- move content of blackbox to bbcore static library
    * make all exported blackbox functions that are not fully proxying placed inside bbcore proxy fn
    * make sure all realisations of apis in bbcore have comments from api descr
    * resolve all #if macrodefs compilations in blackbox
    x look at exported functions again - no ellipsis strictly
    - perform move to bbcore lib
        * make move to single cpp of exported apis
        * resolve usage of defs from bbapi.h by bbcore-related code
        * move *all* APIs from bbcore to bbapi.cpp
        x try remove include of bbapi.h in blackbox cpp files
        * remove ifdef __cplusplus from bbcore - now only cpp
        * move SnapWindowToEdgeV to bbcore
        * replace in users from BBCORE_INCLUDE_DIR to BBCORE_INCLUDES
            * fix bad naming of extern struct MenuInfo MenuInfo; in menu.h 
            * rename in bbstyle_bbnote.h the extern struct MenuInfo MenuInfo;
        * forbid declaration of exported apis from bbapi.h in bbcore
        * remove common include cpp hacks in other projects
        * make bbcore.h contain all headers in folder and subfolders
            * move non-header content from bbcore.h 
            x possibly move from system.h somewhere blackbox app related functions
        * move content from bbcore.cpp, delete bbcore.cpp
        * fix broken docs generation/copying of bblean
        * move unnecessary includes and functions from blackbox.cpp, blackbox.h
        * remove foken warning from blackbox.cpp : 1356
        * remove includes of bbcore.h from any cpp files inside bbcore project
        * move nls from utils.cpp to nls.cpp
        * clean 'deprecated' code from system, rcfile, parse
        x think what to do with blackbox app related code. Create dir with multiple files?
        * make separate folder and files for settings files ?
        x when in-compile hack of settings.cpp will be removed - move all content from
          settingsp.cpp to settings.cpp and remove settingsp.cpp
            * rename settingsp to settingsbbox.h
            * make settingsbbox.cpp
        * change settings class instance usage to single (global?) in every usage case
            * change SettingsCommon to singletone in bbnote
            * change SettingsCommon to singletone in bbstylemaker
            * change settings private usage in bbcore (and blackbox?)
                * make creation of blackbox settings in blackbox class
        * move all content of bbcore dir to bbcore namespace
            * move files to bbcore:
            * remove from bbnote things like extern struct MenuInfo MenuInfo;
            x the MenuItem, Menu declarations must not be in bbcore because public api?
            x remove from bbapi.h all shit like: typedef class Menu Menu; (replace to void* ?)
            * remove unnecessary bbcore:: writings inside bbcore related source code
        * remove rest include cpp hacks
        x include bbapi.h from bbcore only on __BBCORE__ macro defined
            x class Menu, MenuItem must be defined in Menu.h before functions in bbcore namespace
    * change bbcore macro in moved bbapi.h to some other name
        * create new macro in bbapi.h
        * remove bbcore macro in blackbox proj after moving to static lib
    * leave only exported apis public in blackbox and move everything other to namespace bbcore
      * move every exported api to the bottom of corresponding source file
x leave defines for bbox name in blackbox when moving to bbcore

- make exported api functions from blackbox.exe as proxying to methods of class 
